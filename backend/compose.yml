version: "3.9"

x-common: &common
  env_file:
    - ".env"
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
  networks:
    - main

services:
  app:
    <<: *common
    build:
      context: .
      args:
        DEV: ${DEV:-false}
        DB_USER: ${DB_USER}
        DB_PASSWORD: ${DB_PASSWORD}
        DB_NAME: ${DB_NAME}
        DB_PORT: ${DB_PORT}
        DJANGO_USER: ${DJANGO_USER}
        DJANGO_UID: ${DJANGO_UID}
        DJANGO_GID: ${DJANGO_GID}
    environment:
      WORKERS: ${WORKERS:-2}
      THREADS: ${THREADS:-2}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      DJANGO_USER: ${DJANGO_USER}
      DJANGO_UID: ${DJANGO_UID}
      DJANGO_GID: ${DJANGO_GID}
      DATABASE_URL: postgresql://${POSTGRESQL_USERNAME}:${POSTGRESQL_PASSWORD}@${POSTGRESQL_HOST}:${POSTGRESQL_PORT}/${POSTGRESQL_DATABASE}
    ports:
      - "${API_PORT}:7555"
    volumes:
      - .:/backend
      - logs:/backend/logs
    command: make run.server.prod
    restart: unless-stopped
    depends_on:
      - pgbouncer
      - redis
      - rabbitmq
      - smtp
      - collectstatic

  db:
    <<: *common
    image: postgres:13-alpine
    restart: unless-stopped
    environment:
      POSTGRES_INITDB_ARGS: --auth=md5
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:4434"
    volumes:
      - ${DEV_DB_DATA:-prod-db-data}:/var/lib/postgresql/data

  pgbouncer:
    <<: *common
    image: bitnami/pgbouncer:1-debian-12
    restart: unless-stopped
    depends_on:
      - db
    environment:
      POSTGRESQL_DATABASE: ${POSTGRESQL_DATABASE}
      POSTGRESQL_USERNAME: ${POSTGRESQL_USERNAME}
      POSTGRESQL_HOST: ${POSTGRESQL_HOST}
      POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD}
      DATABASE_URL: postgresql://${POSTGRESQL_USERNAME}:${POSTGRESQL_PASSWORD}@${POSTGRESQL_HOST}:${POSTGRESQL_PORT}/${POSTGRESQL_DATABASE}
      POOL_MODE: transaction
      MAX_CLIENT_CONN: 1000
      DEFAULT_POOL_SIZE: 20
      MIN_POOL_SIZE: 5
      RESERVE_POOL_SIZE: 5
      RESERVE_POOL_TIMEOUT: 5
      SERVER_RESET_QUERY: DISCARD ALL
      SERVER_CHECK_QUERY: select 1
      LOG_CONNECTIONS: "1"
      LOG_DISCONNECTIONS: "1"
      LOG_POOLER_ERRORS: "1"
      STATS_PERIOD: "60"
      AUTH_TYPE: md5
    ports:
      - "${POSTGRESQL_PORT}:5434"
    volumes:
      - ${PGBOUNCER_DATA:-pgbouncer-data}:/var/lib/pgbouncer

  redis:
    <<: *common
    image: redis:7.2.5-bookworm
    restart: unless-stopped
    volumes:
      - redis-data:/data
    command: redis-server --maxmemory ${REDIS_MAXMEMORY:-2gb} --maxmemory-policy allkeys-lru

  rabbitmq:
    <<: *common
    image: rabbitmq:3-management
    restart: unless-stopped
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    ports:
      - "${RABBITMQ_DASHBOARD_PORT}:6555"

  celery:
    <<: *common
    build:
      context: .
      args:
        DEV: ${DEV:-true}
        POSTGRESQL_DATABASE: ${POSTGRESQL_DATABASE}
        POSTGRESQL_USERNAME: ${POSTGRESQL_USERNAME}
        POSTGRESQL_HOST: ${POSTGRESQL_HOST}
        POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD}
        DATABASE_URL: postgresql://${POSTGRESQL_USERNAME}:${POSTGRESQL_PASSWORD}@${POSTGRESQL_HOST}:${POSTGRESQL_PORT}/${POSTGRESQL_DATABASE}
        DJANGO_USER: ${DJANGO_USER}
        DJANGO_UID: ${DJANGO_UID}
        DJANGO_GID: ${DJANGO_GID}
    environment:
      POSTGRESQL_DATABASE: ${POSTGRESQL_DATABASE}
      POSTGRESQL_USERNAME: ${POSTGRESQL_USERNAME}
      POSTGRESQL_HOST: ${POSTGRESQL_HOST}
      POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD}
      DATABASE_URL: postgresql://${POSTGRESQL_USERNAME}:${POSTGRESQL_PASSWORD}@${POSTGRESQL_HOST}:${POSTGRESQL_PORT}/${POSTGRESQL_DATABASE}
    command: make run.celery.prod
    restart: unless-stopped
    depends_on:
      - app
      - redis
      - rabbitmq
    volumes:
      - .:/backend
      - logs:/backend/logs

  collectstatic:
    <<: *common
    build:
      context: .
      args:
        DEV: ${DEV:-true}
        DJANGO_USER: ${DJANGO_USER}
        DJANGO_UID: ${DJANGO_UID}
        DJANGO_GID: ${DJANGO_GID}
    environment:
      POSTGRESQL_DATABASE: ${POSTGRESQL_DATABASE}
      POSTGRESQL_USERNAME: ${POSTGRESQL_USERNAME}
      POSTGRESQL_HOST: ${POSTGRESQL_HOST}
      POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD}
      DATABASE_URL: postgresql://${POSTGRESQL_USERNAME}:${POSTGRESQL_PASSWORD}@${POSTGRESQL_HOST}:${POSTGRESQL_PORT}/${POSTGRESQL_DATABASE}
    command: make collectstatic
    depends_on:
      - db
    volumes:
      - .:/backend

  smtp:
    <<: *common
    build:
      context: .
      args:
        DEV: ${DEV:-true}
        DJANGO_USER: ${DJANGO_USER}
        DJANGO_UID: ${DJANGO_UID}
        DJANGO_GID: ${DJANGO_GID}
    command: >
      sh -c "python -m aiosmtpd -n -l 0.0.0.0:8025"
    ports:
      - 8025:8025
    volumes:
      - .:/backend
    restart: unless-stopped

networks:
  main:
    ipam:
      driver: default

volumes:
  prod-db-data:
  pgbouncer-data:
  redis-data:
  rabbitmq-data:
  logs:
